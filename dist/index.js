"use strict";var h=Object.create;var c=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var d=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var m=(t,o)=>c(t,"name",{value:o,configurable:!0});var D=(t,o)=>{for(var r in o)c(t,r,{get:o[r],enumerable:!0})},f=(t,o,r,l)=>{if(o&&typeof o=="object"||typeof o=="function")for(let s of w(o))!g.call(t,s)&&s!==r&&c(t,s,{get:()=>o[s],enumerable:!(l=p(o,s))||l.enumerable});return t};var k=(t,o,r)=>(r=t!=null?h(d(t)):{},f(o||!t||!t.__esModule?c(r,"default",{value:t,enumerable:!0}):r,t)),E=t=>f(c({},"__esModule",{value:!0}),t);var F={};D(F,{StringLogger:()=>i});module.exports=E(F);var a=require("@sapphire/framework"),e=k(require("colorette")),n=require("util"),b=require("@sapphire/timestamp");var i=class extends a.Logger{static{m(this,"StringLogger")}name;timestamp=new b.Timestamp("YYYY-MM-DD HH:mm:ss");constructor(o,r){super(o),e.createColors({useColor:!0}),this.name=r}write(o,r,l){if(o<this.level)return;let s;switch(o){case a.LogLevel.Trace:s=e.gray("TRACE");break;case a.LogLevel.Debug:s=e.blueBright("DEBUG");break;case a.LogLevel.Info:s=e.blue("INFO");break;case a.LogLevel.Warn:s=e.yellow("WARN");break;case a.LogLevel.Error:s=e.red("ERROR");break;case a.LogLevel.Fatal:s=e.bgRedBright("FATAL");break;default:s=e.gray("UNKNOWN");break}let u=typeof r=="string"?(0,n.format)(r,...l):(0,n.inspect)(r,{colors:!0});return console.log(`${e.blue(`[${this.name} #${process.pid}]`)}${e.white(":")} ${e.white(this.timestamp.display(new Date))} - ${s}: ${u}`)}trace(o,...r){this.write(a.LogLevel.Trace,o,r)}debug(o,...r){this.write(a.LogLevel.Debug,o,r)}info(o,...r){this.write(a.LogLevel.Info,o,r)}warn(o,...r){this.write(a.LogLevel.Warn,o,r)}error(o,...r){this.write(a.LogLevel.Error,o,r)}fatal(o,...r){this.write(a.LogLevel.Fatal,o,r)}};(function(t){let o;(function(r){r[r.Trace=10]="Trace",r[r.Debug=20]="Debug",r[r.Info=30]="Info",r[r.Warn=40]="Warn",r[r.Error=50]="Error",r[r.Fatal=60]="Fatal"})(o=t.Level||(t.Level={}))})(i||(i={}));0&&(module.exports={StringLogger});
